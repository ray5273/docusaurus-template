swagger: "2.0"
info:
  version: "1.0.0"
  title: "Sample API"
  description: "A simple API to demonstrate Swagger 2.0"
  termsOfService: "http://example.com/terms/"
  contact:
    name: "API Support"
    url: "http://www.example.com/support"
    email: "support@example.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "api.example.com"
basePath: "/v1"
schemes:
  - "http"
  - "https"
paths:
  /pets:
    get:
      summary: "List all pets"
      description: "Returns a list of all pets."
      operationId: "listPets"
      produces:
        - "application/json"
      parameters:
        - name: "limit"
          in: "query"
          description: "Maximum number of results to return"
          required: false
          type: "integer"
          format: "int32"
      responses:
        "200":
          description: "An array of pets"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Pet"
    post:
      summary: "Create a pet"
      description: "Creates a new pet in the store."
      operationId: "createPet"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "pet"
          in: "body"
          description: "The pet to create"
          required: true
          schema:
            $ref: "#/definitions/NewPet"
      responses:
        "201":
          description: "The created pet"
          schema:
            $ref: "#/definitions/Pet"
  /pets/{petId}:
    get:
      summary: "Info for a specific pet"
      description: "Returns information about a specific pet."
      operationId: "getPetById"
      produces:
        - "application/json"
      parameters:
        - name: "petId"
          in: "path"
          description: "The ID of the pet to retrieve"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "The pet information"
          schema:
            $ref: "#/definitions/Pet"
        "404":
          description: "Pet not found"
    delete:
      summary: "Delete a pet"
      description: "Deletes a pet from the store."
      operationId: "deletePet"
      parameters:
        - name: "petId"
          in: "path"
          description: "The ID of the pet to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "204":
          description: "Pet deleted"
        "404":
          description: "Pet not found"
definitions:
  Pet:
    type: "object"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      tag:
        type: "string"
  NewPet:
    type: "object"
    required:
      - "name"
    properties:
      name:
        type: "string"
      tag:
        type: "string"
